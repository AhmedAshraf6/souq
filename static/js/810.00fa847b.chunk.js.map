{"version":3,"file":"static/js/810.00fa847b.chunk.js","mappings":"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","sources":["components/help/ChatSpaceWithSupport.js","components/help/TaikWithSupport.js","components/help/ChatWithSupport.js","pages/Help.js","components/support/ChatSpaceSupport.js","components/support/SupportInfo.js","components/support/TaukSupport.js","components/support/SpecifiChat.js","components/support/AllSupportChats.js","pages/Support.js","components/shared-components/IsAdminSupport.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useUserContext } from '../../contexts/UserProvider';\r\nimport { useState } from 'react';\r\nimport { doc, onSnapshot } from 'firebase/firestore';\r\nimport { db, storage } from '../../firebase';\r\nimport { image_url, seller_url, supportadmin } from '../../utils/constants';\r\nimport { useRef } from 'react';\r\nimport axios from 'axios';\r\nconst ChatSpaceWithSupport = () => {\r\n  const { userInfo } = useUserContext();\r\n  const [messages, setMessages] = useState([]);\r\n  const [imageSupport, setImageSupport] = useState('');\r\n  useEffect(() => {\r\n    const getChats = () => {\r\n      const unsub = onSnapshot(\r\n        doc(db, 'supportChats', `${supportadmin}${userInfo.id}`),\r\n        (doc) => {\r\n          if (doc.data()) {\r\n            setMessages(doc.data().messages);\r\n          }\r\n        }\r\n      );\r\n      return () => {\r\n        unsub();\r\n      };\r\n    };\r\n    userInfo.id && getChats();\r\n  }, [userInfo.id]);\r\n\r\n  const refMsg = useRef();\r\n  useEffect(() => {\r\n    refMsg.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  const getImageSupport = async () => {\r\n    const response = await axios(`${seller_url}${supportadmin}`);\r\n    setImageSupport(response?.data?.data[0]?.User?.image);\r\n  };\r\n  useEffect(() => {\r\n    getImageSupport();\r\n  }, []);\r\n  return (\r\n    <div className='d-flex flex-column gap-2 overflow-auto py-2'>\r\n      {messages &&\r\n        messages.map((m) => {\r\n          return (\r\n            <div key={m.id}>\r\n              {userInfo.id == m.senderId ? (\r\n                <div\r\n                  className='d-flex align-items-center gap-3 justify-content-start client-chat'\r\n                  ref={refMsg}\r\n                >\r\n                  {userInfo.image && !m.img && (\r\n                    <div className='d-flex flex-column align-items-center'>\r\n                      <img\r\n                        src={`${image_url}${userInfo.image}`}\r\n                        alt='person2'\r\n                        className='rounded-circle avatar'\r\n                        loading='lazy'\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  {m.text && (\r\n                    <div className='message bg-light py-3 px-2 rounded d-flex '>\r\n                      <p className='text-primary m-0 p-0 fs-6 fw-bold px-2 text-wrap'>\r\n                        {m.text}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                  {m.img && (\r\n                    <img\r\n                      src={m.img}\r\n                      className='chat-image'\r\n                      loading='lazy'\r\n                    ></img>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className='d-flex align-items-center gap-3 justify-content-end team-chat'\r\n                  ref={refMsg}\r\n                >\r\n                  {imageSupport && !m.img && (\r\n                    <div className='d-flex flex-column align-items-center'>\r\n                      <img\r\n                        src={`${image_url}${imageSupport}`}\r\n                        alt='person2'\r\n                        className='rounded-circle avatar'\r\n                        loading='lazy'\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {m.text && (\r\n                    <div className='message bg-light py-3 px-2 rounded d-flex '>\r\n                      <p className='text-primary m-0 p-0 fs-6 fw-bold px-2 text-wrap'>\r\n                        {m.text}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                  {m.img && (\r\n                    <img\r\n                      src={m.img}\r\n                      className='chat-image'\r\n                      loading='lazy'\r\n                    ></img>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatSpaceWithSupport;\r\n","import React from 'react';\r\nimport upload from '../../assets/ICONs/chat/upload.png';\r\nimport send from '../../assets/ICONs/chat/send.png';\r\nimport { useUserContext } from '../../contexts/UserProvider';\r\nimport { useState } from 'react';\r\nimport {\r\n  arrayUnion,\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n  setDoc,\r\n  Timestamp,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\nimport { db, storage } from '../../firebase';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\r\nimport { supportadmin } from '../../utils/constants';\r\n\r\nconst TaikWithSupport = () => {\r\n  const { userInfo } = useUserContext();\r\n  const [textMessage, setTextMessage] = useState('');\r\n  const handleSubmit = async () => {\r\n    const compinedid = `${supportadmin}${userInfo.id}`;\r\n    if (textMessage) {\r\n      try {\r\n        //create user on firestore\r\n        const user = await getDoc(doc(db, 'supportChats', compinedid));\r\n        if (!user.exists()) {\r\n          setTextMessage('');\r\n          await updateDoc(doc(db, 'support', supportadmin), {\r\n            [compinedid + '.clientInfo']: {\r\n              id: userInfo.id,\r\n              name: userInfo.name,\r\n              image: userInfo?.image,\r\n            },\r\n            [compinedid + '.lastMessage']: {\r\n              text: textMessage,\r\n            },\r\n            [compinedid + '.isRead']: 'false',\r\n            [compinedid + '.date']: serverTimestamp(),\r\n          });\r\n          await setDoc(doc(db, 'supportChats', compinedid), {\r\n            messages: arrayUnion({\r\n              id: uuid(),\r\n              text: textMessage,\r\n              senderId: userInfo.id,\r\n              date: Timestamp.now(),\r\n            }),\r\n          });\r\n        } else {\r\n          setTextMessage('');\r\n\r\n          await updateDoc(doc(db, 'supportChats', compinedid), {\r\n            messages: arrayUnion({\r\n              id: uuid(),\r\n              text: textMessage,\r\n              senderId: userInfo.id,\r\n              date: Timestamp.now(),\r\n            }),\r\n          });\r\n          await updateDoc(doc(db, 'support', supportadmin), {\r\n            [compinedid + '.lastMessage']: {\r\n              text: textMessage,\r\n            },\r\n            [compinedid + '.date']: serverTimestamp(),\r\n            [compinedid + '.isRead']: 'false',\r\n          });\r\n        }\r\n      } catch (error) {}\r\n    }\r\n  };\r\n  const handleChangeImage = async (img) => {\r\n    const storageRef = ref(storage, uuid());\r\n    const compinedid = `${supportadmin}${userInfo.id}`;\r\n    const uploadTask = uploadBytesResumable(storageRef, img);\r\n\r\n    uploadTask.on(\r\n      (error) => {\r\n        //TODO:Handle Error\r\n      },\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\r\n          await updateDoc(\r\n            doc(db, 'supportChats', `${supportadmin}${userInfo.id}`),\r\n            {\r\n              messages: arrayUnion({\r\n                id: uuid(),\r\n                senderId: userInfo.id,\r\n                date: Timestamp.now(),\r\n                img: downloadURL,\r\n              }),\r\n            }\r\n          );\r\n          await updateDoc(doc(db, 'support', supportadmin), {\r\n            [compinedid + '.lastMessage']: {\r\n              text: 'صورة',\r\n            },\r\n            [compinedid + '.date']: serverTimestamp(),\r\n            [compinedid + '.isRead']: 'false',\r\n          });\r\n        });\r\n      }\r\n    );\r\n  };\r\n  const handleKey = (e) => {\r\n    e.code === 'Enter' && handleSubmit();\r\n  };\r\n  return (\r\n    <div className='taik d-flex justify-content-between align-items-center bg-light rounded mx-1 text-primary py-2 px-3'>\r\n      <div className='removed-input'>\r\n        <label htmlFor='file-input' className='pointer'>\r\n          <img src={upload} alt='upload' className='icon' loading='lazy' />\r\n        </label>\r\n        <input\r\n          id='file-input'\r\n          type='file'\r\n          onChange={(e) => handleChangeImage(e.target.files[0])}\r\n          accept='image/*'\r\n        />\r\n      </div>\r\n      <input\r\n        type='text'\r\n        className='message w-100 mx-2 h-100 border-0 outline-0'\r\n        placeholder='اكتب رسالة'\r\n        value={textMessage}\r\n        onKeyDown={handleKey}\r\n        onChange={(e) => setTextMessage(e.target.value)}\r\n      />\r\n      {/*  */}\r\n      <span onClick={handleSubmit}>\r\n        <img src={send} alt='send' className='icon' loading='lazy' />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaikWithSupport;\r\n","import React from 'react';\nimport ChatSpaceWithSupport from './ChatSpaceWithSupport';\nimport TaikWithSupport from './TaikWithSupport';\n\nconst ChatWithSupport = () => {\n  return (\n    //  h-50 overflow-auto\n    <div className=' bg-primary user-chat rounded  d-flex flex-column justify-content-between '>\n      <h1></h1>\n      <div className='overflow-auto'>\n        <ChatSpaceWithSupport />\n        <TaikWithSupport />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWithSupport;\n","import React, { useEffect } from 'react';\nimport ChatWithSupport from '../components/help/ChatWithSupport';\nimport { useMainContext } from '../contexts/MainProvider';\n\nconst Help = () => {\n  const { toggleNavbarFunc, closeSubmenu, closeSearch } = useMainContext();\n  useEffect(() => {\n    toggleNavbarFunc(false);\n    closeSubmenu(false);\n    closeSearch();\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <main className='help my-5'>\n      <div className='container-fluid'>\n        <div className='row gy-3'>\n          <div className='col-md-2 text-center'>\n            <>\n              <h3 className='text-primary'>المساعدة</h3>\n              <div\n                className='btn-group-vertical'\n                role='group'\n                aria-label='Vertical button group'\n              >\n                <button\n                  type='button'\n                  className='btn btn-secondary text-white btn-lg'\n                >\n                  تحدث معنا\n                </button>\n              </div>\n            </>\n          </div>\n          <div className='col-md-10'>\n            <ChatWithSupport />\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Help;\n","import { doc, onSnapshot } from 'firebase/firestore';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useSupportContext } from '../../contexts/SupportProvider';\r\nimport { useUserContext } from '../../contexts/UserProvider';\r\nimport { db } from '../../firebase';\r\nimport { image_url } from '../../utils/constants';\r\n\r\nconst ChatSpaceSupport = () => {\r\n  const { chatId, clientName, clientImage } = useSupportContext();\r\n  const [messages, setMessages] = useState([]);\r\n  const { userInfo } = useUserContext();\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  useEffect(() => {\r\n    const getChats = () => {\r\n      const unsub = onSnapshot(doc(db, 'supportChats', chatId), (doc) => {\r\n        if (doc.data()) {\r\n          setMessages(doc.data().messages);\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        unsub();\r\n      };\r\n    };\r\n\r\n    chatId && getChats();\r\n  }, [chatId]);\r\n  return (\r\n    <div className='d-flex flex-column gap-2 overflow-auto py-2'>\r\n      {messages.map((m) => {\r\n        return (\r\n          <div key={m.id}>\r\n            {userInfo.id == m.senderId ? (\r\n              <div\r\n                className='d-flex align-items-center gap-3 justify-content-start client-chat'\r\n                ref={ref}\r\n              >\r\n                {userInfo.image && !m.img && (\r\n                  <div className='d-flex flex-column align-items-center'>\r\n                    <img\r\n                      src={`${image_url}${userInfo.image}`}\r\n                      alt='person2'\r\n                      className='rounded-circle avatar'\r\n                      loading='lazy'\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {m.text && (\r\n                  <div className='message bg-light py-3 px-2 rounded d-flex '>\r\n                    <p className='text-primary m-0 p-0 fs-6 fw-bold px-2 text-wrap'>\r\n                      {m.text}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                {m.img && (\r\n                  <img src={m.img} className='chat-image' loading='lazy'></img>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className='d-flex align-items-center gap-3 justify-content-end team-chat'\r\n                ref={ref}\r\n              >\r\n                {clientImage && !m.img && (\r\n                  <div className='d-flex flex-column align-items-center'>\r\n                    <img\r\n                      src={`${image_url}${clientImage}`}\r\n                      alt='person2'\r\n                      className='rounded-circle avatar'\r\n                      loading='lazy'\r\n                    />\r\n                  </div>\r\n                )}\r\n                {m.text && (\r\n                  <div className='message bg-light py-3 px-2 rounded d-flex '>\r\n                    <p className='text-primary m-0 p-0 fs-6 fw-bold px-2 text-wrap'>\r\n                      {m.text}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                {m.img && (\r\n                  <img src={m.img} className='chat-image' loading='lazy'></img>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n      {/* Your Message */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatSpaceSupport;\r\n","import React from 'react';\r\nimport { useSupportContext } from '../../contexts/SupportProvider';\r\nimport { image_url } from '../../utils/constants';\r\n\r\nconst SupportInfo = () => {\r\n  const { chatId, clientName, clientImage } = useSupportContext();\r\n  return (\r\n    <div className='info'>\r\n      <div className='seller-info text-decoration-none bg-light rounded mx-1 text-primary d-flex justify-content-between  align-items-start align-items-sm-center flex-column flex-sm-row gap-2 py-2 mt-2'>\r\n        <div className='d-flex align-items-center'>\r\n          <img\r\n            src={`${image_url}${clientImage}`}\r\n            alt='person'\r\n            className='seller-avatar rounded-circle mx-2'\r\n            loading='lazy'\r\n          />\r\n          <div className='mx-3'>\r\n            <h4>{clientName}</h4>\r\n          </div>\r\n        </div>\r\n        <div className='d-flex'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n  return <>as</>;\r\n};\r\n\r\nexport default SupportInfo;\r\n","import {\r\n  arrayUnion,\r\n  doc,\r\n  serverTimestamp,\r\n  Timestamp,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\nimport React from 'react';\r\nimport { useSupportContext } from '../../contexts/SupportProvider';\r\nimport { useUserContext } from '../../contexts/UserProvider';\r\nimport { db, storage } from '../../firebase';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\r\nimport { useState } from 'react';\r\nimport upload from '../../assets/ICONs/chat/upload.png';\r\nimport send from '../../assets/ICONs/chat/send.png';\r\nimport { supportadmin } from '../../utils/constants';\r\n\r\nconst TaukSupport = () => {\r\n  const [textMessage, setTextMessage] = useState('');\r\n  const { chatId } = useSupportContext();\r\n  const { userInfo } = useUserContext();\r\n\r\n  // console.log(img);\r\n  const handleSubmit = async () => {\r\n    if (textMessage) {\r\n      try {\r\n        setTextMessage('');\r\n        await updateDoc(doc(db, 'supportChats', chatId), {\r\n          messages: arrayUnion({\r\n            id: uuid(),\r\n            text: textMessage,\r\n            senderId: userInfo.id,\r\n            date: Timestamp.now(),\r\n          }),\r\n        });\r\n        await updateDoc(doc(db, 'support', supportadmin), {\r\n          [chatId + '.lastMessage']: {\r\n            text: textMessage,\r\n          },\r\n          [chatId + '.date']: serverTimestamp(),\r\n        });\r\n      } catch (error) {}\r\n    }\r\n  };\r\n  const handleChangeImage = async (img) => {\r\n    const storageRef = ref(storage, uuid());\r\n\r\n    const uploadTask = uploadBytesResumable(storageRef, img);\r\n\r\n    uploadTask.on(\r\n      (error) => {\r\n        //TODO:Handle Error\r\n      },\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\r\n          await updateDoc(doc(db, 'supportChats', chatId), {\r\n            messages: arrayUnion({\r\n              id: uuid(),\r\n              senderId: userInfo.id,\r\n              date: Timestamp.now(),\r\n              img: downloadURL,\r\n            }),\r\n          });\r\n          await updateDoc(doc(db, 'support', supportadmin), {\r\n            [chatId + '.lastMessage']: {\r\n              text: 'صورة',\r\n            },\r\n            [chatId + '.date']: serverTimestamp(),\r\n          });\r\n        });\r\n      }\r\n    );\r\n  };\r\n  const handleKey = (e) => {\r\n    e.code === 'Enter' && handleSubmit();\r\n  };\r\n  return (\r\n    <div className='taik d-flex justify-content-between align-items-center bg-light rounded mx-1 text-primary py-2 px-3'>\r\n      <div className='removed-input'>\r\n        <label htmlFor='file-input' className='pointer'>\r\n          <img loading='lazy' src={upload} alt='upload' className='icon' />\r\n        </label>\r\n        <input\r\n          id='file-input'\r\n          type='file'\r\n          onChange={(e) => handleChangeImage(e.target.files[0])}\r\n          accept='image/*'\r\n        />\r\n      </div>\r\n\r\n      <input\r\n        type='text'\r\n        className='message w-100 mx-2 h-100 border-0 outline-0'\r\n        placeholder='اكتب رسالة'\r\n        value={textMessage}\r\n        onKeyDown={handleKey}\r\n        onChange={(e) => setTextMessage(e.target.value)}\r\n      />\r\n      <span onClick={handleSubmit}>\r\n        <img loading='lazy' src={send} alt='send' className='icon' />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaukSupport;\r\n","import React from 'react';\r\nimport ChatSpaceSupport from './ChatSpaceSupport';\r\nimport SupportInfo from './SupportInfo';\r\nimport TaukSupport from './TaukSupport';\r\n\r\nconst SpecifiChat = () => {\r\n  return (\r\n    <div className=' bg-primary user-chat rounded  d-flex flex-column justify-content-between '>\r\n      {/* Info */}\r\n      <SupportInfo />\r\n      {/* Taik */}\r\n      <div className='overflow-auto'>\r\n        <ChatSpaceSupport />\r\n        <TaukSupport />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecifiChat;\r\n","import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useSupportContext } from '../../contexts/SupportProvider';\r\nimport photocamera from '../../assets/ICONs/photocamera.png';\r\nimport { image_url, seller_url, supportadmin } from '../../utils/constants';\r\nimport { doc, updateDoc } from 'firebase/firestore';\r\nimport { db } from '../../firebase';\r\n\r\nconst AllSupportChats = ({ supportChats }) => {\r\n  const { dispatch, chatId } = useSupportContext();\r\n  const { pathname } = useLocation();\r\n\r\n  const handleSelectCLient = async (chatid, name, image) => {\r\n    // this change previos chat and mae is read true beacuse we were in this chat and turned to another\r\n    if (chatId) {\r\n      await updateDoc(doc(db, 'support', supportadmin), {\r\n        [chatId + '.isRead']: 'true',\r\n      });\r\n    }\r\n    dispatch({\r\n      type: 'CHANGE_USER',\r\n      payload: chatid,\r\n      payload2: name,\r\n      payload3: image,\r\n    });\r\n    await updateDoc(doc(db, 'support', supportadmin), {\r\n      [chatid + '.isRead']: 'true',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='chats mt-3'>\r\n      {Object.entries(supportChats)\r\n        ?.sort((a, b) => b[1].date - a[1].date)\r\n        .map((chat) => {\r\n          // console.log(chat[0]);\r\n          return (\r\n            <div\r\n              className='box text-decoration-none bg-light rounded mx-1 text-primary d-flex justify-content-between flex-column flex-sm-row py-3 mt-3 pointer'\r\n              key={chat[0]}\r\n            >\r\n              <div\r\n                className='d-flex align-items-center'\r\n                onClick={() =>\r\n                  handleSelectCLient(\r\n                    chat[0],\r\n                    chat[1].clientInfo.name,\r\n                    chat[1].clientInfo.image\r\n                  )\r\n                }\r\n              >\r\n                <div className='d-flex align-items-center'>\r\n                  <img\r\n                    src={`${image_url}${chat[1].clientInfo.image}`}\r\n                    alt='person'\r\n                    className='avatar rounded-circle mx-2'\r\n                    loading='lazy'\r\n                  />\r\n                  <div className='mx-3'>\r\n                    <h4>{chat[1].clientInfo.name}</h4>\r\n                    {chat[1].lastMessage?.text &&\r\n                    chat[1].lastMessage?.text == 'صورة' ? (\r\n                      <>\r\n                        <span\r\n                          className={`${\r\n                            (chat[1]?.isRead && chat[1]?.isRead == 'true') ||\r\n                            chat[0] == chatId\r\n                              ? 'fw-lighter text-muted'\r\n                              : 'fw-semibold fs-6'\r\n                          }`}\r\n                        >\r\n                          {chat[1].lastMessage?.text}\r\n                        </span>\r\n                        <img\r\n                          src={photocamera}\r\n                          alt=''\r\n                          className='chat-icon'\r\n                          loading='lazy'\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <span\r\n                        className={`${\r\n                          (chat[1]?.isRead && chat[1]?.isRead == 'true') ||\r\n                          chat[0] == chatId\r\n                            ? 'fw-lighter text-muted'\r\n                            : 'fw-semibold fs-6'\r\n                        }`}\r\n                      >\r\n                        {chat[1].lastMessage?.text &&\r\n                        chat[1].lastMessage.text.length <= 10\r\n                          ? chat[1].lastMessage?.text\r\n                          : `${chat[1].lastMessage.text.slice(0, 10)}...`}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSupportChats;\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useMainContext } from '../contexts/MainProvider';\r\nimport SupportChatSpace from '../components/support/SpecifiChat';\r\nimport { doc, onSnapshot } from 'firebase/firestore';\r\nimport AllSupportChats from '../components/support/AllSupportChats';\r\nimport ChatUs from '../components/help/ChatWithSupport';\r\nimport { useUserContext } from '../contexts/UserProvider';\r\nimport { db } from '../firebase';\r\nimport { useState } from 'react';\r\nimport chat from '../assets/ICONs/chat/chat.png';\r\n\r\nimport SpecifiChat from '../components/support/SpecifiChat';\r\nimport { useSupportContext } from '../contexts/SupportProvider';\r\nconst Support = () => {\r\n  const { toggleNavbarFunc, closeSubmenu, closeSearch } = useMainContext();\r\n  const { userInfo } = useUserContext();\r\n  const [adminSupport, setAdminSupport] = useState(false);\r\n  const [supportChats, setSupportChats] = useState([]);\r\n  const { chatId } = useSupportContext();\r\n  useEffect(() => {\r\n    toggleNavbarFunc(false);\r\n    closeSubmenu(false);\r\n    closeSearch();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  useEffect(() => {\r\n    const getChats = () => {\r\n      const unsub = onSnapshot(doc(db, 'support', userInfo.id), (doc) => {\r\n        if (doc.data()) {\r\n          setSupportChats(doc.data());\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        unsub();\r\n      };\r\n    };\r\n    if (userInfo.email == 'elqutamy.zeyad15@gmail.com') {\r\n      setAdminSupport(true);\r\n      getChats();\r\n    }\r\n  }, [userInfo.id]);\r\n  return (\r\n    <main className='support my-5'>\r\n      <div className='container-fluid'>\r\n        <div className='row gy-3'>\r\n          <div className='col-md-3 text-center'>\r\n            <AllSupportChats supportChats={supportChats} />\r\n          </div>\r\n          <div className='col-md-9'>\r\n            {chatId ? (\r\n              <SpecifiChat />\r\n            ) : (\r\n              <div className=' bg-primary rounded choose-chat d-flex justify-content-center align-items-center'>\r\n                <div>\r\n                  <img\r\n                    src={chat}\r\n                    alt='chat'\r\n                    className='chat-image '\r\n                    loading='lazy'\r\n                  />\r\n                  <h5 className='text-center text-white fw-bold mt-3'>\r\n                    اختر محادثة لعرضها\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Support;\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  HashRouter,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport { useUserContext } from '../../contexts/UserProvider';\r\nimport Help from '../../pages/Help';\r\nimport Support from '../../pages/Support';\r\n\r\nconst IsAdminSupport = () => {\r\n  const { userInfo, isAdminSupportFunc, isAdminSupport, token } =\r\n    useUserContext();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (userInfo.email == 'elqutamy.zeyad15@gmail.com') {\r\n      isAdminSupportFunc();\r\n    }\r\n  }, [userInfo.id]);\r\n\r\n  return (\r\n    <div>\r\n      {token ? (\r\n        isAdminSupport ? (\r\n          <Support />\r\n        ) : (\r\n          <Help />\r\n        )\r\n      ) : (\r\n        <Navigate to='/' state={{ from: location }} replace />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IsAdminSupport;\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"names":["userInfo","useUserContext","_useState","useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","imageSupport","setImageSupport","useEffect","id","unsub","onSnapshot","doc","db","concat","supportadmin","data","getChats","refMsg","useRef","_refMsg$current","current","scrollIntoView","behavior","getImageSupport","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_response$data","_response$data$data$","_response$data$data$$","response","wrap","_context","prev","next","axios","seller_url","sent","User","image","stop","apply","arguments","_jsx","className","children","map","m","senderId","_jsxs","ref","img","src","image_url","alt","loading","text","textMessage","setTextMessage","handleSubmit","compinedid","_updateDoc","_updateDoc2","getDoc","exists","updateDoc","_defineProperty","name","serverTimestamp","setDoc","arrayUnion","uuid","date","Timestamp","now","t0","handleChangeImage","_ref2","_callee3","storageRef","uploadTask","_context3","storage","uploadBytesResumable","on","error","getDownloadURL","snapshot","then","_ref3","_callee2","downloadURL","_updateDoc3","_context2","_x2","_x","htmlFor","upload","type","onChange","e","target","files","accept","placeholder","value","onKeyDown","code","onClick","send","ChatSpaceWithSupport","TaikWithSupport","_useMainContext","useMainContext","toggleNavbarFunc","closeSubmenu","closeSearch","window","scrollTo","_Fragment","role","ChatWithSupport","_useSupportContext","useSupportContext","chatId","clientImage","clientName","_ref$current","SupportInfo","ChatSpaceSupport","TaukSupport","_Object$entries","supportChats","dispatch","handleSelectCLient","useLocation","pathname","chatid","payload","payload2","payload3","_x3","Object","entries","sort","a","b","chat","_chat$1$lastMessage","_chat$1$lastMessage2","_chat$","_chat$2","_chat$1$lastMessage3","_chat$3","_chat$4","_chat$1$lastMessage4","_chat$1$lastMessage5","clientInfo","lastMessage","isRead","photocamera","length","slice","setAdminSupport","setSupportChats","email","AllSupportChats","SpecifiChat","_useUserContext","isAdminSupportFunc","isAdminSupport","token","location","Support","Help","Navigate","to","state","from","replace","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","REGEX","test","byteToHex","i","push","toString","substr","arr","offset","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify"],"sourceRoot":""}